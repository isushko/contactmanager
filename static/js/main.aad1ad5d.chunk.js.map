{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","About","NotFound","Test","title","console","log","fetch","then","response","json","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aad1ad5d.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n\n    switch (action.type) {\n        case 'DELETE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\n            };\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n            };\n        case 'UPDATE_CONTACT':\n            return {\n                ... state,\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? contact = action.payload: contact)\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport class Provider extends Component {\n    state = {\n        contacts: [\n\n        ],\n        dispatch: action => {\n            this.setState(state => reducer(state, action))\n        }\n    };\n\n    async componentDidMount() {\n\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n\n        this.setState({contacts: res.data});\n    }\n\n    render () {\n        return (\n            <Context.Provider value={this.state} >\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Consumer} from \"../../context\";\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\nclass Contact extends Component {\n\n    static propTypes = {\n        contact: PropTypes.object.isRequired\n    };\n\n    state = {\n        showContactInfo: false\n    };\n\n    onDeleteClick = async (id, dispatch) => {\n\n        try {\n\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n        } catch (e) {\n\n        }\n\n        dispatch({type:'DELETE_CONTACT', payload: id});\n\n    };\n\n    render() {\n\n        const {id, name,email, phone} = this.props.contact;\n        const {showContactInfo} = this.state;\n\n\n        return (\n\n            <Consumer>\n                {value => {\n                    const {dispatch} = value;\n\n                    return (\n                        <div className=\"card card-body mb-3\">\n                            <h4>{name} <i onClick={() => this.setState({showContactInfo: !this.state.showContactInfo})}\n                                          className=\"fas fa-sort-down\" style={{cursor:\"pointer\"}}/>\n                                <i className=\"fas fa-times\" style={{cursor: 'pointer', float: 'right', color:'red'}} onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\n                                <Link to={`contact/edit/${id}`}>\n                                    <i className=\"fas fa-pencil-alt\" style={{cursor:'pointer', float:'right', color:'black', marginRight:'1rem'}}></i>\n                                </Link>\n\n                            </h4>\n                            {showContactInfo? (<ul className=\"list-group\">\n                                <li className=\"list-group-item\">Email: {email}</li>\n                                <li className=\"list-group-item\">Phone: {phone}</li>\n                            </ul>): null}\n\n                        </div>\n                    )\n                }}\n            </Consumer>\n\n        );\n    }\n}\n\nexport default Contact;\n","import React, {Component} from 'react';\nimport Contact from \"./Contact\";\nimport {Consumer} from '../../context';\n\n\nclass Contacts extends Component {\n\n    render() {\n\n        return (\n\n            /**\n             *\n             *\n             * https://jsonplaceholder.typicode.com/users\n             *\n             * fetch('https://jsonplaceholder.typicode.com/users')\n             .then(response => response.json())\n             .then(data => {\n                console.log(data)\n                this.setState({\n                    title: data.title\n                })\n            });\n             */\n            <Consumer>\n                {value => {\n                    const {contacts} = value;\n\n                    return <React.Fragment>\n                        <h1 className=\"display-4 mb-2\">\n                            <span className='text-danger'>Contact</span> List\n                        </h1>\n                        {contacts.map(contact =>\n                            <Contact key={contact.id} contact={contact}\n                                     />)\n                        }\n                    </React.Fragment>\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link}  from 'react-router-dom';\n\nconst Header = (props) => {\n    const {branding} = props;\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n            <div className=\"container\">\n                <a href=\"/\" className=\"navbar-brand\">\n                    {branding}\n                </a>\n                <div>\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-iter\">\n                            <Link to=\"/\" className=\"nav-link\">\n                                <i className=\"fas fa-home\"/>\n                                Home</Link>\n                        </li>\n                        <li className=\"nav-iter\">\n                            <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"/>Add</Link>\n                        </li>\n                        <li className=\"nav-iter\">\n                            <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"/>About</Link>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nHeader.defaultProps = {\n    branding: \"My App\"\n};\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n};\n\n\n\nexport default Header;\n","import React from 'react';\n\nexport default () => {\n    return (\n        <div>\n            <h1 className=\"display-4\">About Contact Manager</h1>\n            <p className=\"lead\">Simple app to manage contacts</p>\n            <p className=\"text-secondary\">Version 1.0.0</p>\n        </div>\n    );\n}","import React from 'react';\n\nexport default () => {\n    return (\n        <div>\n            <h1 className=\"display-4\"><span className='text-danger'> 404</span> Page not found</h1>\n            <p className='lead'>Page doesn't exist </p>\n        </div>\n    );\n}","import React, {Component} from 'react';\n\nclass Test extends Component {\n\n    state = {\n        title: ''\n    };\n\n    componentDidMount() {\n        // load remote data\n        console.log('did mount');\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\n            .then(response => response.json())\n            .then(data => {\n                console.log(data)\n                this.setState({\n                    title: data.title\n                })\n            });\n    }\n\n    render() {\n        const {title} = this.state;\n\n        return (\n            <div>\n                <h1>{title}</h1>\n            </div>\n        );\n    }\n}\n\nexport default Test;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({label, name, value, placeholder, type, onChange, error}) => {\n\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n            <input type={type}\n                   className={classnames('form-control form-control-lg', {\n                       'is-invalid': error\n                   })}\n                   placeholder={placeholder}\n                   name={name}\n                   value={value}\n                   onChange={onChange}\n            />\n            {error &&  <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\n\nTextInputGroup.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, {Component} from 'react';\nimport {Consumer} from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from 'axios';\n\nclass AddContact extends Component {\n\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {\n\n\n        }\n\n    };\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n\n        const {name, email, phone} = this.state;\n\n        if (name === '') {\n            this.setState({errors: {name: 'Name is required',}});\n            return;\n        }\n\n        if (email === '') {\n            this.setState({errors: {email: 'Email is required',}});\n            return;\n\n        }\n\n        if (phone === '') {\n            this.setState({errors: {phone: 'Phone is required',}});\n            return;\n\n        }\n\n        const newContact = {\n            name,\n            email,\n            phone\n        };\n\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\n\n        dispatch({type: \"ADD_CONTACT\", payload:res.data});\n\n        this.setState({\n            name:'',\n            email:'',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push('/');\n    };\n\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value});\n    };\n\n\n    render() {\n\n        const {name, email, phone, errors} = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const {dispatch} = value;\n                    return (\n                        <div className='card mb-3'>\n                            <div className=\"card-header\">\n                                Add Contact\n                            </div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <TextInputGroup label={\"Name\"} onChange={this.onChange} value={name} placeholder={\"Enter name...\"} name={\"name\"} error={errors.name}/>\n                                    <TextInputGroup label={\"Email\"} onChange={this.onChange} value={email} placeholder={\"Enter email...\"} name={\"email\"} type={\"email\"} error={errors.email}/>\n                                    <TextInputGroup label={\"Phone\"} onChange={this.onChange} value={phone} placeholder={\"Enter phone...\"} name={\"phone\"} error={errors.phone}/>\n\n                                    <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block \"/>\n                                </form>\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n\n    }\n}\n\nexport default AddContact;","import React, {Component} from 'react';\nimport {Consumer} from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from 'axios';\n\nclass EditContact extends Component {\n\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {\n\n\n        }\n\n    };\n\n    async componentDidMount() {\n        const {id} = this.props.match.params;\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n        const contact = res.data;\n\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n        })\n    };\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n\n        const {name, email, phone} = this.state;\n\n        if (name === '') {\n            this.setState({errors: {name: 'Name is required',}});\n            return;\n        }\n\n        if (email === '') {\n            this.setState({errors: {email: 'Email is required',}});\n            return;\n\n        }\n\n        if (phone === '') {\n            this.setState({errors: {phone: 'Phone is required',}});\n            return;\n\n        }\n\n        const updContact = {\n            name, email, phone\n        };\n\n        const {id} = this.props.match.params;\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n\n        dispatch({type:'UPDATE_CONTACT', payload: res.data});\n\n        this.setState({\n            name:'',\n            email:'',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push('/');\n    };\n\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value});\n    };\n\n\n    render() {\n\n        const {name, email, phone, errors} = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const {dispatch} = value;\n                    return (\n                        <div className='card mb-3'>\n                            <div className=\"card-header\">\n                                Update Contact\n                            </div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <TextInputGroup label={\"Name\"} onChange={this.onChange} value={name} placeholder={\"Enter name...\"} name={\"name\"} error={errors.name}/>\n                                    <TextInputGroup label={\"Email\"} onChange={this.onChange} value={email} placeholder={\"Enter email...\"} name={\"email\"} type={\"email\"} error={errors.email}/>\n                                    <TextInputGroup label={\"Phone\"} onChange={this.onChange} value={phone} placeholder={\"Enter phone...\"} name={\"phone\"} error={errors.phone}/>\n\n                                    <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block \"/>\n                                </form>\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n\n    }\n}\n\nexport default EditContact;","import React, {Component} from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\nimport AddContact from './components/contacts/AddContact'\nimport EditContact from './components/contacts/EditContact';\nimport {Provider} from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n\n    render() {\n        return (\n            <Provider>\n                <Router>\n                    <div className=\"App\">\n                        <Header branding=\"Contact Manager\"/>\n                        <div className=\"container\">\n                            <Switch>\n                                <Route exact path=\"/\" component={Contacts}/>\n                                <Route exact path=\"/contact/add\" component={AddContact}/>\n                                <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n                                <Route exact path=\"/about\" component={About}/>\n                                <Route exact path=\"/test\" component={Test}/>\n                                <Route component={NotFound}/>\n                            </Switch>\n                        </div>\n                    </div>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}